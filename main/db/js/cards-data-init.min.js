/*Отслеживание изменений в глобальной переменной globalSheets*/
function watchGlobalSheets(sheetName, callback)
{
    let value;
    Object.defineProperty(window, sheetName,
        {
        get()
        {
            return value;
        },
        set(newValue) {
            if (value === undefined && newValue !== null)
            {
                callback(newValue);
            }
            value = newValue;
        },
        configurable: true,
        enumerable: true
    });
}

function onGlobalSheetsChanged(value)
{
    const lastFourSoundsArray = extractForLastSoundsData(value);
    showCardsFromLastSoundsBlock(lastFourSoundsArray);
}

watchGlobalSheets('globalSheets', onGlobalSheetsChanged);


/*Основные функции и классы для работы с карточками*/
function extractForLastSoundsData(globalSheets)
{
    let extractedDataArray = [];
    for(let i = globalSheets[0].rows.length - 4, j = 0; i < globalSheets[0].rows.length; i++, j++)
    {
        extractedDataArray[j] = 
        {
            id: parseInt(globalSheets[0].rows[i][0]),
            image: globalSheets[0].rows[i][1],
            name: globalSheets[0].rows[i][2],
            type: globalSheets[0].rows[i][3],
            date: globalSheets[0].rows[i][4],
            time: globalSheets[0].rows[i][5],
            sound: globalSheets[0].rows[i][6]
        }
    }
    return extractedDataArray;
}

function extractForLastPodcastsData(globalSheets)
{
    let extractedDataArray = [];
    for(let i = globalSheets[1].rows.length - 10, j = 0; i < globalSheets[1].rows.length; i++, j++)
    {
        extractedDataArray[j] = 
        {
            id: parseInt(globalSheets[1].rows[i][0]),
            image: globalSheets[1].rows[i][1],
            name: globalSheets[1].rows[i][2],
            type: globalSheets[1].rows[i][3],
            date: globalSheets[1].rows[i][4],
            time: globalSheets[1].rows[i][5],
            sound: globalSheets[1].rows[i][6]
        }
    }
    return extractedDataArray;
}

function extractForLastNewsData(globalSheets)
{
    let extractedDataArray = [];
    for(let i = globalSheets[2].rows.length - 4, j = 0; i < globalSheets[2].rows.length; i++, j++)
    {
        extractedDataArray[j] = 
        {
            id: parseInt(globalSheets[2].rows[i][0]),
            image: globalSheets[2].rows[i][1],
            name: globalSheets[2].rows[i][2],
            type: globalSheets[2].rows[i][3],
            date: globalSheets[2].rows[i][4],
            time: globalSheets[2].rows[i][5],
            sound: globalSheets[2].rows[i][6]
        }
    }
    return extractedDataArray;
}

function showCardsFromLastSoundsBlock(dataBuffer)
{
    const parentElement = document.getElementById('sounds-container');
    const childElementsArray = parentElement.querySelectorAll('*');
    childElementsArray.forEach(child => {
        switch(child.className)
        {
            case 'last-sounds__loader-container':
            {
                child.remove();
                break;
            }
            case 'sound-container':
            {
                const soundsContainer = document.getElementById('sounds-container');
                for(let i = dataBuffer.length - 1; i >= 0; i--)
                {
                    const clonedCard = child.cloneNode(true);
                    child.remove();
                    clonedCard.style.display = 'grid';
                    const soundInfo = clonedCard.querySelector('div.sound-info');
                    const soundName = soundInfo.querySelector('span.sound-name');
                    soundName.textContent = dataBuffer[i].name;
                    
                    const soundType = soundInfo.querySelector('span.sound-type');
                    soundType.textContent = dataBuffer[i].type;

                    const soundInfoAdvanced = clonedCard.querySelector('div.sound-info-advanced');
                    const soundDate = soundInfoAdvanced.querySelector('span.sound-date');
                    soundDate.textContent = `${dataBuffer[i].date} ${dataBuffer[i].time}`;
                    soundsContainer.appendChild(clonedCard);
                };
                break;
            }
            case 'sounds-showAll':
            {
                child.style.display = 'block';
            }
        }
    });
    return;
}
/*
class LastSoundCard
{
    constructor(buffer)
    {
        this.element;
        this.id = buffer.id;
        this.image = buffer.image;
        this.name = buffer.name;
        this.type = buffer.type;
        this.date = buffer.date;
        this.time = buffer.time;
        this.sound = buffer.sound;
        this.createCard();
    }
    createCard()
    {
        const soundsContainer = document.getElementById('sounds-container');

        this.element = document.createElement('div');
        this.element.className = 'sound-container';

        const soundPlayButton = document.createElement('button');
        soundPlayButton.className = 'sound-container__play';

        const soundContainerPlayIcon = document.createElement('img');
        soundContainerPlayIcon.loading = 'lazy';
        soundContainerPlayIcon.src = 'main/img/svg/play.svg';
        soundPlayButton.appendChild(soundContainerPlayIcon);

        const soundInfo = document.createElement('div');
        soundInfo.className = 'sound-info';
        const soundName = document.createElement('span');
        const soundType = document.createElement('span');
        soundName.textContent = this.name;
        soundType.textContent = this.type;
        soundInfo.appendChild(soundName);
        soundInfo.appendChild(soundType);

        const soundInfoAdvanced = document.createElement('div');
        soundInfoAdvanced.className = 'sound-info-advanced';

        const soundOptions = document.createElement('div');
        soundOptions.className = 'sound-options';
        
        const soundLike = document.createElement('button');
        const soundBookmark = document.createElement('button');
        soundLike.className = 'sound-like';
        soundBookmark.className = 'sound-bookmark';
        const soundLikeImage = document.createElement('img');
        const soundBookmarkImage = document.createElement('img');
        soundLikeImage.loading = 'lazy';
        soundLikeImage.src = 'main/img/svg/likes.svg';
        soundLikeImage.alt = 'like';
        soundBookmarkImage.loading = 'lazy';
        soundBookmarkImage.src = 'main/img/svg/bookmarks.svg';
        soundBookmarkImage.alt = 'bookmark';

        soundLike.appendChild(soundLikeImage);
        soundBookmark.appendChild(soundBookmarkImage);

        soundOptions.appendChild(soundLike);
        soundOptions.appendChild(soundBookmark);

        const soundDate = document.createElement('span');
        soundDate.className = 'sound-date';
        soundDate.textContent = `${this.date} ${this.time}`;

        soundInfoAdvanced.appendChild(soundOptions);
        soundInfoAdvanced.appendChild(soundDate);

        this.element.appendChild(soundPlayButton);
        this.element.appendChild(soundInfo);
        this.element.appendChild(soundInfoAdvanced);

        soundsContainer.appendChild(this.element);
    }
}

class LastPodcastCard
{
    constructor(buffer)
    {
        this.element;
        this.id = buffer.id;
        this.image = buffer.image;
        this.title = buffer.name;
        this.desc = buffer.type;
        this.date = buffer.date;
        this.time = buffer.time;
        this.sound = buffer.sound;
        this.createCard(buffer);
    }
    createCard(buffer)
    {
        const container = document.getElementById('podcasts-container');

        const podcastCard = document.createElement('div');
        podcastCard.className = 'podcast-card';

        const podcastCardPicture = document.createElement('div');
        podcastCardPicture.className = 'podcast-card__picture';

        const podcastCardPlay = document.createElement('img');
        podcastCardPlay.loading = 'lazy';
        podcastCardPlay.src = 'main/img/webp/album.webp';
        podcastCardPlay.alt = 'podcast picture';
        podcastCardPicture.appendChild(podcastCardPlay);

        const podcastCardInfo = document.createElement('div');
        podcastCardInfo.className = 'podcast-card__info';

        const podcastCardTitle = document.createElement('h2');
        podcastCardTitle.textContent = `${this.title}`;
        const podcastCardDesc = document.createElement('p');
        podcastCardDesc.textContent = `${this.desc}`;
        podcastCardInfo.appendChild(podcastCardTitle);
        podcastCardInfo.appendChild(podcastCardDesc);

        const podcastCardInfoAdvanced = document.createElement('div');
        podcastCardInfoAdvanced.className = 'podcast-card__info-advanced';

        const podcastCardOptions = document.createElement('div');
        podcastCardOptions.className = 'podcast-card__options';
        
        const podcastCardLike = document.createElement('button');
        podcastCardLike.className = 'podcast-card__like';

        const podcastCardLikeImage = document.createElement('img');
        podcastCardLikeImage.loading = 'lazy';
        podcastCardLikeImage.src = 'main/img/svg/likes.svg';
        podcastCardLikeImage.alt = 'podcast like';

        podcastCardLike.appendChild(podcastCardLikeImage);

        const podcastCardBookmark = document.createElement('button');
        podcastCardBookmark.className = 'podcast-card__bookmark';

        const podcastCardBookmarkImage = document.createElement('img');
        podcastCardBookmarkImage.loading = 'lazy';
        podcastCardBookmarkImage.src = 'main/img/svg/bookmarks.svg';
        podcastCardBookmarkImage.alt = 'podcast bookmark';

        podcastCardBookmark.appendChild(podcastCardBookmarkImage);

        podcastCardOptions.appendChild(podcastCardLike);
        podcastCardOptions.appendChild(podcastCardBookmark);

        const podcastCardDate = document.createElement('span');
        podcastCardDate.className = 'podcast-card__date';
        podcastCardDate.innerHTML = `${this.date}<br>${this.time}`;

        podcastCardInfoAdvanced.appendChild(podcastCardOptions);
        podcastCardInfoAdvanced.appendChild(podcastCardDate);

        podcastCard.appendChild(podcastCardPicture);
        podcastCard.appendChild(podcastCardInfo);
        podcastCard.appendChild(podcastCardInfoAdvanced);

        container.appendChild(podcastCard);
    }
}

class LastNewsCard
{
    constructor(buffer)
    {
        this.element;
        this.id = buffer.id;
        this.image = buffer.image;
        this.title = buffer.name;
        this.desc = buffer.type;
        this.date = buffer.date;
        this.time = buffer.time;
        this.createCard();
    }
    createCard()
    {
        const container = document.getElementById('news-container');

        const card = document.createElement('div');
        card.className = 'news-card';

        const cardPicture = document.createElement('div');
        cardPicture.className = 'news-card__picture';

        const cardInfo = document.createElement('div');
        cardInfo.className = 'news-card__info';

        const cardInfoTitle = document.createElement('h2');
        cardInfoTitle.textContent = this.title;
        const cardInfoDesc = document.createElement('p');
        cardInfoDesc.textContent = this.desc;
        
        cardInfo.appendChild(cardInfoTitle);
        cardInfo.appendChild(cardInfoDesc);

        const cardInfoAdvanced = document.createElement('div');
        cardInfoAdvanced.className = 'news-card__info-advanced';

        const cardOptions = document.createElement('div');
        cardOptions.className = 'news-card__options';

        const cardLike = document.createElement('button');
        cardLike.className = 'news-card__like';

        const cardLikeImage = document.createElement('img');
        cardLikeImage.loading = 'lazy';
        cardLikeImage.src = 'main/img/svg/likes.svg';
        cardLikeImage.alt = 'news like';

        cardLike.appendChild(cardLikeImage);

        const cardBookmark = document.createElement('button');
        cardBookmark.className = 'news-card__bookmark';

        const cardBookmarkImage = document.createElement('img');
        cardBookmarkImage.loading = 'lazy';
        cardBookmarkImage.src = 'main/img/svg/bookmarks.svg';
        cardBookmarkImage.alt = 'news bookmark';

        cardBookmark.appendChild(cardBookmarkImage);

        cardOptions.appendChild(cardLike);
        cardOptions.appendChild(cardBookmark);

        const cardDate = document.createElement('span');
        cardDate.className = 'news-card__date';
        cardDate.innerHTML = `${this.date}<br>${this.time}`;

        cardInfoAdvanced.appendChild(cardOptions);
        cardInfoAdvanced.appendChild(cardDate);

        card.appendChild(cardPicture);
        card.appendChild(cardInfo);
        card.appendChild(cardInfoAdvanced);
        
        container.appendChild(card);
    }
}*/